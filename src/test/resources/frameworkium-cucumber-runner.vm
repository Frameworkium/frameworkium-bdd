#macro( stringArray $array ){#foreach( $element in $array )"$element"#if( $foreach.hasNext ), #end#end}#end
#set( $api = false )
#foreach($tag in $feature.getTags() )
    #if ($tag.getName() == '@api')
        #set( $api = true )
        #break
    #end
#end
#foreach($tag in $scenario.getTags() )
    #if ($tag.getName() == '@api')
        #set( $api = true )
        #break
    #end
#end

#if ($packageName)
package $packageName;
#end##
#if( $api )
import com.frameworkium.core.api.tests.BaseAPITest;
#else
import com.frameworkium.core.ui.tests.BaseUITest;
#end

import cucumber.api.CucumberOptions;
import cucumber.api.testng.CucumberFeatureWrapper;
import cucumber.api.testng.TestNGCucumberRunner;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import org.testng.annotations.BeforeMethod;

@Test
@CucumberOptions(
strict = $strict,
features = {"$featureFile"},
plugin = #stringArray($plugins),
monochrome = ${monochrome},
#if(!$featureFile.contains(".feature:") && $tags)
tags = #stringArray($tags),
#end
glue = #stringArray($glue))
#if( $api )
public class $className extends BaseAPITest {
#else
public class $className extends BaseUITest {
#end

    private TestNGCucumberRunner testNGCucumberRunner;

    @BeforeClass(alwaysRun = true)
    public void setUpClass() {
      testNGCucumberRunner = new TestNGCucumberRunner(this.getClass());
    }

    @AfterClass(alwaysRun = true)
    public void tearDownClass() {
      testNGCucumberRunner.finish();
    }

    @Test(
    groups = {"cucumber"},
    description = "Runs Cucumber Feature",
    dataProvider = "features"
    )
    public void feature(CucumberFeatureWrapper cucumberFeature) {
      this.testNGCucumberRunner.runCucumber(cucumberFeature.getCucumberFeature());
    }

    @DataProvider
    public Object[][] features() {
      return this.testNGCucumberRunner.provideFeatures();
    }

}
